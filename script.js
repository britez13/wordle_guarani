
const targetWords = [
"aguai",
"ahoja",
"ajahu",
"ajapo",
"ajapi",
"ajeve",
"ajoko", 
"ajopy",
"ajoso", 
"ajuhu",
"ajuka", 
"akuti", 
"ambue", 
"andai", 
"angai", 
"angue", 
"añete", 
"apeju", 
"apeno", 
"apepu", 
"apete", 
"apiha", 
"apoha", 
"apopy", 
"apose", 
"apyka", 
"apype", 
"apysa", 
"apyte", 
"araka",
"arapa",
"arapo",
"arapy",
"arasa",
"aravo",
"areko",
"arete",
"aruru",
"asaha",
"asaje",
"asuka",
"atopa",
"aturu",
"atyha",
"avare",
"avati",
"avave",
"avevo",
"avuku",
"avusu",
"avyky",
"chara",
"chavi",
"chete",
"cheve",
"chini",
"chipa",
"chiri",
"chivu",
"chori",
"chovi",
"chovy",
"chulu",
"chupe",
"chure",
"churi",
"doyto",
"eichu",
"ejapo",
"epyta",
"eteve",
"gotyo",
"guaho",
"guahu",
"guaka",
"guapy",
"guare",
"guari",
"guasu",
"guata",
"guejy",
"gueru",
"guevi",
"guive",
"guyra",
"guyru",
"guyry",
"hague",
"haiha",
"haity",
"hakua",
"hayhu",
"hayta",
"hayvi",
"hecha",
"hegui",
"hekua",
"hekue",
"hembe",
"hemby",
"henda",
"hendu",
"hendy",
"hesay",
"hogue",
"hopea",
"hoyta",
"hugua",
"huguy",
"humby",
"hundi",
"hunga",
"hyapu",
"hyepo",
"hyepy",
"hykue",
"hymba",
"ijehe",
"ikatu",
"ikose",
"ikove",
"itaju",
"itaky",
"itapa",
"itape",
"itapu",
"itasy",
"itaty",
"jagua",
"jaipa",
"jalea",
"jayta",
"jecha",
"jeepy",
"jegua",
"jehai",
"jeike",
"jeiko",
"jeity",
"jepoi",
"jeupe",
"jeyta",
"joaju",
"joapy",
"joasa",
"joaty",
"joavy",
"joehe",
"jogua",
"jokua",
"jopoi",
"joyvy",
"juaju",
"juapy",
"juasa",
"juavy",
"juehe",
"jueja",
"jygue",
"kacha",
"kagua",
"kaguy",
"kamba",
"kambu",
"kamby",
"kandu",
"kangy",
"karai",
"karra",
"katui",
"kokue",
"kompi",
"kopia",
"kotyo",
"krevi",
"krivi",
"kuati",
"kuchu",
"kuehe",
"kuera",
"kuera",
"kumbe",
"kumbo",
"kumby",
"kygua",
"kymbu",
"lansa",
"lembu",
"machu",
"mandi",
"manga",
"mante",
"mañei",
"mayma",
"mbara",
"mbeju",
"mberu",
"mbiti",
"mboai",
"mboao",
"mbohe",
"mboja",
"mboka",
"mbope",
"mbopi",
"mbopu",
"mbore",
"mboro",
"mbota",
"mboty",
"mbova",
"mbovo",
"mbovu",
"mbovy",
"mbuai",
"mbusu",
"mbutu",
"mbyai",
"mbyao",
"mbyja",
"mbyky",
"mbyte",
"membe",
"memby",
"menda",
"mendu",
"mendy",
"mensu",
"mimbi",
"mimby",
"minga",
"momba",
"mombe",
"mombo",
"monda",
"monde",
"mondo",
"monge",
"mongy",
"moopi",
"muaña",
"myaña",
"mymba",
"nambi",
"nandi",
"nanga",
"ndaje",
"ndyry",
"ndyvu",
"neaño",
"ningo",
"nunga",
"ñande",
"ñandu",
"ñandy",
"ñañua",
"ñeiha",
"ñembo",
"ñembu",
"ñoite",
"ogapy",
"ogyke",
"ojapo",
"ojehe",
"ojupe",
"okyta",
"opaha",
"ovava",
"pague",
"paite",
"pekue",
"pende",
"peyta",
"picha",
"pichy",
"piguy",
"pinda",
"pindo",
"poapi",
"poapy",
"poasu",
"pochy",
"poeja",
"poepy",
"poguy",
"pokua",
"poyhu",
"poyvi",
"puapy",
"puhoe",
"punga",
"pyaha",
"pyahu",
"pyapy",
"pygua",
"pykua",
"pykue",
"pytue",
"pyvoi",
"rague",
"raity",
"rambi",
"ravel",
"rayhu",
"recha",
"reike",
"rembe",
"remby",
"renda",
"rendy",
"rendu",
"resay",
"reyta",
"rogue",
"ropea",
"rovia",
"royta",
"ruguy",
"rumby",
"ryapu",
"ryepy",
"rykue",
"rymba",
"saguy",
"saite",
"sambo",
"sangy",
"saple",
"sayke",
"sayku",
"sogue",
"soite",
"suguy",
"tagua",
"tague",
"taipy",
"taita",
"taity",
"tajao",
"tamba",
"tambo",
"tapia",
"tasyo",
"tatyu",
"tavao",
"tayhu",
"techa",
"tembe",
"tenda",
"tendu",
"tendy",
"terei",
"tesay",
"timbo",
"tindy",
"togue",
"topea",
"tugua",
"tuguy",
"tumby",
"tyapu",
"tyasy",
"tyeju",
"tyepy",
"tyevu",
"tykua",
"tykue",
"tymba",
"typei",
"tyvyo",
"upeve",
"uruku",
"urupe",
"urusu",
"vaiha",
"vaive",
"vende",
"vyrea",
"ygape",
"ygary",
"ygasa",
"yhasa",
"yjere",
"ymave",
"yrupe",
"ysaja",
"ysapa",
"ysapu",
"ysapy",
"ysope",
"ysypo",
"ysyry",
"ytaku",
"yvapo",
"yvate",
"yvaty",
"yvope",
"yvoty",
"yvuku",
"yvyja",
"yvype",
"yvyra",
"yvytu",
"yvyty",
"yvyty",
"yvyvo"

];

const dictionary = [
"aguai",
"ahoja",
"aipóa", 
"ajapi",
"ajapo",
"ajépa", 
"ajeve", 
"ajoko",
"ajopy",
"ajoso",
"ajuhu",
"ajuka", 
"ajúra", 
"ajúri", 
"akuti", 
"alóha", 
"ambue", 
"amóme", 
"amóva", 
"andai", 
"angai", 
"angue", 
"añete", 
"apáva", 
"apeju", 
"apeno", 
"apepu", 
"apéro", 
"apete", 
"apiha", 
"apoha", 
"apopy", 
"apose", 
"apyka", 
"apype", 
"apýra", 
"apýri", 
"apysa", 
"apyte", 
"araka",
"arapa",
"arapo",
"arapy",
"arasa",
"aravo",
"areko",
"arete",
"arhél",
"áripi",
"árupi",
"aruru",
"asaha",
"asaje",
"asuka",
"asýpe",
"atopa",
"aturu",
"atyha",
"atýra",
"avare",
"avati",
"avave",
"avevo",
"avuku",
"avusu",
"avyky",
"cháke",
"chara",
"chavi",
"chéne",
"chete",
"cheve",
"chini",
"chipa",
"chiri",
"chivu",
"chori",
"chovi",
"chovy",
"chúka",
"chúko",
"chulu",
"chupe",
"chúra",
"chure",
"churi",
"doyto",
"eichu",
"ejapo",
"ekína",
"eláda",
"epyta",
"erádo",
"eteve",
"gotyo",
"guaho",
"guahu",
"guaka",
"guápa",
"guápo",
"guapy",
"guare",
"guari",
"guasu",
"guata",
"guejy",
"guéno",
"guépa",
"guéro",
"gueru",
"guevi",
"guíki",
"guive",
"guýpe",
"guyra",
"guyru",
"guyry",
"guývo",
"hácha",
"hague",
"haiha",
"háime",
"haity",
"hakua",
"hárro",
"hasýa",
"havía",
"hayhu",
"hayta",
"hayvi",
"hecha",
"hegui",
"hekua",
"hekue",
"hekýi",
"hembe",
"hemby",
"hemói",
"henda",
"hendu",
"hendy",
"henói",
"hénte",
"heñói",
"heréi",
"hesay",
"hogue",
"hopea",
"hovái",
"hoyta",
"huégo",
"hugua",
"huguy",
"humby",
"hundi",
"hunga",
"húvol",
"hyapu",
"hyepo",
"hyepy",
"hyjúi",
"hykue",
"hymba",
"hypýi",
"hysýi",
"ijehe",
"ikatu",
"ikose",
"ikove",
"ipúva",
"itaju",
"itaky",
"itapa",
"itape",
"itapu",
"itasy",
"itaty",
"jagua",
"jahéi",
"jaipa",
"jajái",
"jalea",
"jarýi",
"jayta",
"jecha",
"jeepy",
"jegua",
"jégua",
"jehai",
"jehýi",
"jeike",
"jeiko",
"jeity",
"jekái",
"jepoi",
"jeupe",
"jeyta",
"joaju",
"joapy",
"joasa",
"joaty",
"joavy",
"joehe",
"jogua",
"johéi",
"jojái",
"jojói",
"jokua",
"jopoi",
"jopói",
"jovái",
"joyvy",
"juaju",
"juapy",
"juasa",
"juavy",
"juehe",
"jueja",
"jygue",
"jykýi",
"kacha",
"kagua",
"kaguy",
"kamba",
"kambu",
"kamby",
"kandu",
"kangy",
"kanóa",
"karai",
"karáu",
"karra",
"kárse",
"katui",
"káusa",
"kóina",
"kokue",
"kompi",
"kopia",
"kotyo",
"krevi",
"krivi",
"kuápe",
"kuára",
"kuati",
"kuchu",
"kuehe",
"kuera",
"kuépe",
"kuera",
"kuéra",
"kuéva",
"kukúi",
"kumbe",
"kumbo",
"kumby",
"kupía",
"kygua",
"kymbu",
"kyrýu",
"lansa",
"légua",
"lembu",
"lénto",
"machu",
"maína",
"mandi",
"manga",
"mante",
"mañei",
"mayma",
"mbara",
"mbeju",
"mberu",
"mbíra",
"mbiti",
"mboai",
"mboao",
"mbohe",
"mboja",
"mboka",
"mbope",
"mbopi",
"mbopu",
"mbore",
"mboro",
"mbota",
"mboty",
"mbova",
"mbovo",
"mbovu",
"mbovy",
"mbuai",
"mbusu",
"mbutu",
"mbyai",
"mbyao",
"mbyja",
"mbyky",
"mbyte",
"membe",
"memby",
"menda",
"mendu",
"mendy",
"mensu",
"mimbi",
"mimby",
"mimói",
"minga",
"momba",
"mombe",
"mombo",
"momýi",
"monda",
"monde",
"mondo",
"monge",
"mongy",
"moñái",
"moopi",
"mósto",
"muaña",
"myaña",
"mymba",
"mymýi",
"nambi",
"nandi",
"nanga",
"ndaje",
"ndéve",
"ndyry",
"ndyvu",
"neaño",
"néike",
"néina",
"néipy",
"ningo",
"nunga",
"ñaína",
"ñandái",
"ñande",
"ñánde",
"ñandu",
"ñandy",
"ñañua",
"ñeiha",
"ñembo",
"ñembu",
"ñemói",
"ñemýi",
"ñoite",
"ñónte",
"ñyñýi",
"ogapy",
"ogyke",
"ojapo",
"ojehe",
"ojupe",
"okápe",
"okára",
"okyta",
"omano",
"ónivu",
"opaha",
"opáva",
"opívo",
"opóvo",
"opýri",
"opývo",
"oréve",
"osóva",
"ováva",
"ovava",
"ovúva",
"pague",
"paite",
"páila",
"paíno",
"peína",
"péina",
"pekue",
"pende",
"peyta",
"picha",
"pichy",
"piguy",
"pinda",
"pindo",
"plíki",
"poapi",
"poapy",
"poasu",
"pochy",
"poeja",
"poepy",
"poguy",
"pohéi",
"pohýi",
"pojái",
"pokua",
"pórte",
"potái",
"poyhu",
"poyvi",
"puapy",
"puhoe",
"punga",
"pyaha",
"pyahu",
"pyapy",
"pygua",
"pyhéi",
"pykua",
"pykue",
"pykúi",
"pytue",
"pyvoi",
"rague",
"raity",
"rambi",
"ramói",
"ravel",
"rayhu",
"recha",
"réifu",
"reike",
"reína",
"rembe",
"remby",
"remói",
"renda",
"rendy",
"rendu",
"renói",
"resay",
"reyta",
"rogue",
"rokái",
"ropáy",
"ropea",
"rovái",
"rovia",
"royta",
"ruguy",
"rumby",
"ryapu",
"ryepy",
"ryjúi",
"rykue",
"rymba",
"ryrýi",
"rysýi",
"saguy",
"saite",
"sambo",
"sangy",
"saple",
"sayke",
"sayku",
"sénte",
"sevói",
"sogue",
"soite",
"suguy",
"súiko",
"sysýi",
"tagua",
"tague",
"tahýi",
"taipy",
"taita",
"taity",
"tajao",
"tamba",
"tambo",
"tamói",
"tapia",
"tápia",
"tasyo",
"tatyu",
"tavao",
"tayhu",
"techa",
"técho",
"tembe",
"tembo",
"temói",
"tenda",
"tendu",
"tendy",
"ténge",
"tenói",
"teñói",
"terei",
"tesay",
"tetéu",
"timbo",
"tindy",
"togue",
"tokái",
"tóngo",
"topea",
"továi",
"trópa",
"tugua",
"tuguy",
"tumby",
"tyapu",
"tyasy",
"tyeju",
"tyepy",
"tyevu",
"tyjúi",
"tykua",
"tykue",
"tymba",
"typei",
"typói",
"typýi",
"tysýi",
"tytýi",
"tyvyo",
"umíva",
"upépe",
"upéva",
"upeve",
"upévo",
"uruku",
"urupe",
"urusu",
"vaiha",
"vaípe",
"váiro",
"vaive",
"válle",
"vende",
"vevúi",
"vícho",
"vokói",
"vúrro",
"vyrea",
"ygape",
"ygary",
"ygasa",
"yhasa",
"yjere",
"yképe",
"ykére",
"ykévo",
"ymave",
"ypóra",
"ypýpe",
"yrupe",
"ysaja",
"ysapa",
"ysapu",
"ysapy",
"ysope",
"ysypo",
"ysyry",
"ytaku",
"yvága",
"yvapo",
"yvate",
"yvaty",
"yvíra",
"yvope",
"yvóra",
"yvoty",
"yvuku",
"yvyja",
"yvype",
"yvýpe",
"yvyra",
"yvýre",
"yvytu",
"yvyty",
"yvyty",
"yvyvo"

];

// console.log(targetWords.length);
// console.log("\u2B1C");
// console.log("\uD83D\uDFE8");
// console.log("\uD83D\uDFE9");

const keyboard = document.querySelector("[data-keyboard]");
const alertContainer = document.querySelector("[data-alert-container]");
const guessGrid = document.querySelector("[data-guess-grid]");
const shareBtn = document.querySelector(".alert-pink");
const WORD_LENGTH = 5;
const FLIP_ANIMATION_DURATION = 500;
const DANCE_ANIMATION_DURATION = 500;
const i = Math.floor(Math.random()* targetWords.length ); 

const targetWord = targetWords[i];
let green = "\uD83D\uDFE9";
let yellow = "\uD83D\uDFE8";
let white = "\u2B1C";
let result = ``


startInteraction()

function startInteraction() {
  document.addEventListener("click", handleMouseClick)
  //document.addEventListener("keydown", handleKeyPress)
}

function stopInteraction() {
  document.removeEventListener("click", handleMouseClick)
  //document.removeEventListener("keydown", handleKeyPress)
}

function handleMouseClick(e) {
  if (e.target.matches("[data-key]")) {
    pressKey(e.target.dataset.key)
    return
  }

  if (e.target.matches("[data-enter]")) {
    submitGuess()
    return
  }

  if (e.target.matches("[data-delete]")) {
    deleteKey()
    return
  }
}


function pressKey(key) {
  const activeTiles = getActiveTiles()
  if (activeTiles.length >= WORD_LENGTH) return
  const nextTile = guessGrid.querySelector(":not([data-letter])")
  nextTile.dataset.letter = key.toLowerCase()
  nextTile.textContent = key
  nextTile.dataset.state = "active"
}

function deleteKey() {
  const activeTiles = getActiveTiles()
  const lastTile = activeTiles[activeTiles.length - 1]
  if (lastTile == null) return
  lastTile.textContent = ""
  delete lastTile.dataset.state
  delete lastTile.dataset.letter
}

function submitGuess() {
  const activeTiles = [...getActiveTiles()]
  if (activeTiles.length !== WORD_LENGTH) {
    showAlert("Emyanyhêna")
    shakeTiles(activeTiles)
    return
  }

  const guess = activeTiles.reduce((word, tile) => {
    return word + tile.dataset.letter
  }, "")

  if (!dictionary.includes(guess)) {
    showAlert("Ndaipóri ñe'êryrúpe")
    shakeTiles(activeTiles)
    return
  }


  stopInteraction()
  activeTiles.forEach((...params) => flipTile(...params, guess))
  //console.log(result)
  result += "\n"
}

function flipTile(tile, index, array, guess) {
  const letter = tile.dataset.letter
  const key = keyboard.querySelector(`[data-key="${letter}"i]`)
  setTimeout(() => {
    tile.classList.add("flip")
  }, (index * FLIP_ANIMATION_DURATION) / 2)

  tile.addEventListener(
    "transitionend",
    () => {
      tile.classList.remove("flip")
      if (targetWord[index] === letter) {
        result += green
        tile.dataset.state = "correct"
        key.classList.add("correct")
      } else if (targetWord.includes(letter)) {
        result += yellow
        tile.dataset.state = "wrong-location"
        key.classList.add("wrong-location")
      } else {
        result += white
        tile.dataset.state = "wrong"
        key.classList.add("wrong")
      }

      if (index === array.length - 1) {
        tile.addEventListener(
          "transitionend",
          () => {
            startInteraction()
            checkWinLose(guess, array)
          },
          { once: true }
        )
      }
    },
    { once: true }
  )
}

function getActiveTiles() {
  return guessGrid.querySelectorAll('[data-state="active"]')
}

function showAlert(message, duration = 1000) {
  const alert = document.createElement("div")
  alert.textContent = message
  alert.classList.add("alert")
  // alert.addEventListener( "click", () => {
  //   console.log("Hola")
  // } )


  alertContainer.prepend(alert)
  if (duration == null) return

  setTimeout(() => {
    alert.classList.add("hide")
    alert.addEventListener("transitionend", () => {
      alert.remove()
    })
  }, duration)
}

function displayAlert(message, duration) {

  const share = document.createElement("div")
  share.textContent = message
  share.classList.add("alert-pink")
  
  Document.addEventListener( "click", (e) => {
    if(e.target.matches(".alert-pink")){

    }
  } )

  alertContainer.prepend(share)
  if (duration == null) return

  setTimeout(() => {
    share.classList.add("hide")
    share.addEventListener("transitionend", () => {
      share.remove()
    })
  }, duration)
}

function shakeTiles(tiles) {
  tiles.forEach(tile => {
    tile.classList.add("shake")
    tile.addEventListener(
      "animationend",
      () => {
        tile.classList.remove("shake")
      },
      { once: true }
    )
  })
}

function checkWinLose(guess, tiles) {
 
  if (guess === targetWord) {
    showAlert("Ajépa nde vale", 3000)
    danceTiles(tiles)
    //displayAlert("Ekomparti", 5000)
    stopInteraction()
    return
  }

  const remainingTiles = guessGrid.querySelectorAll(":not([data-letter])")
  if (remainingTiles.length === 0) {
    showAlert(`"${targetWord}" ha'e kuri `, 3000)
    stopInteraction()
  }
}

function danceTiles(tiles) {
  result += `\n\nwww.google.com`
  //console.log(result)
  tiles.forEach((tile, index) => {
    setTimeout(() => {
      tile.classList.add("dance")
      tile.addEventListener(
        "animationend",
        () => {
          tile.classList.remove("dance")
        },
        { once: true }
      )
    }, (index * DANCE_ANIMATION_DURATION) / 5)
  })
}
//console.log(result)
